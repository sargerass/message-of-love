{"version":3,"sources":["components/intro/intro.tsx","core/helpers.ts","components/message-initial/message-initial.tsx","components/quest/quest.tsx","components/message-finish/message-finish.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/problema.jpg"],"names":["Intro","props","state","showHeart","showHelp","_setup","this","_finishAnimationTyping","bind","_finishIntro","setState","setTimeout","onFinish","defaultOptions","loop","autoplay","animationData","animationHeartbeat","rendererSettings","preserveAspectRatio","onClick","isClickToPauseDisabled","options","isStopped","isPaused","height","width","cursor","hideWhenDone","animation","_getAnimation","help","_getHelp","className","onTypingDone","React","Component","goEndPage","window","scrollTo","document","body","scrollHeight","MessageInitial","showOptions","showNoAcepted","_accepted","_noAccepted","animationSad","_getOptions","noAccepted","_getAnimationNoAccepted","Quest","answer","hasError","showForm","event","target","value","name","preventDefault","animationHungry","_onChangeAnswer","_onSubmit","_finishTyping","erroAnswer","_getAnimationHungry","onSubmit","max","min","type","onChange","formAnswer","_getForm","src","imageQuest","Backspace","delay","MessageFinish","showDog","animationDog","dog","_getAnimationDog","App","showMessageInitial","showQuest","showFinish","_finishMessageInitial","_finishQuest","messageInitial","quest","messageFinish","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"oRA+EeA,G,yDAlEb,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACXC,WAAW,EACXC,UAAU,GAEZ,EAAKC,SANiB,E,qDAStBC,KAAKC,uBAAyBD,KAAKC,uBAAuBC,KAAKF,MAC/DA,KAAKG,aAAeH,KAAKG,aAAaD,KAAKF,Q,+CAEL,IAAD,OACrCA,KAAKI,SAAS,CAAEP,WAAW,IAC3BQ,YAAW,kBAAM,EAAKD,SAAS,CAAEN,UAAU,MAAS,O,qCAGpDE,KAAKL,MAAMW,UAAYN,KAAKL,MAAMW,a,sCAGlC,IAAMC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAeC,EACfC,iBAAkB,CAChBC,oBAAqB,mBAGzB,OACE,yBAAKC,QAASd,KAAKG,cACjB,kBAAC,IAAD,CACEY,wBAAwB,EACxBC,QAAST,EACTU,WAAW,EACXC,UAAU,EACVC,OAAQ,IACRC,MAAO,S,iCAMb,OACE,kBAAC,IAAD,CAAQC,OAAQ,CAAEC,cAAc,IAAhC,8B,+BAGM,IAAD,EACyBtB,KAAKJ,MAA7BC,EADD,EACCA,UAAWC,EADZ,EACYA,SACbyB,EAAY1B,EAAYG,KAAKwB,gBAAkB,KAC/CC,EAAO3B,EAAWE,KAAK0B,WAAa,KAC1C,OACE,yBAAKC,UAAU,iBACb,kBAAC,IAAD,CACEC,aAAc5B,KAAKC,uBACnBoB,OAAQ,CAAEC,cAAc,IAExB,8CACA,6BALF,gCAQCC,EACAE,O,GA9DWI,IAAMC,Y,QCZbC,EAAY,WACvB1B,YAAW,WACT2B,OAAOC,SAAS,EAAEC,SAASC,KAAKC,gBAC/B,MCsGUC,E,kDA5Fb,WAAY1C,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACX0C,aAAa,EACbC,eAAe,GAEjB,EAAKxC,SANiB,E,iEAStBgC,M,+BAGA/B,KAAKC,uBAAyBD,KAAKC,uBAAuBC,KAAKF,MAC/DA,KAAKwC,UAAYxC,KAAKwC,UAAUtC,KAAKF,MACrCA,KAAKyC,YAAczC,KAAKyC,YAAYvC,KAAKF,Q,+CAGzCA,KAAKI,SAAS,CAAEkC,aAAa,M,kCAG7BtC,KAAKI,SAAS,CAAEmC,eAAe,IAC/BvC,KAAKL,MAAMW,UAAYN,KAAKL,MAAMW,a,oCAGlCN,KAAKI,SAAS,CAAEmC,eAAe,M,gDAG/B,IAAMhC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAegC,EACf9B,iBAAkB,CAChBC,oBAAqB,mBAGzB,OACE,6BACE,kBAAC,IAAD,CACEE,wBAAwB,EACxBC,QAAST,EACTU,WAAW,EACXC,UAAU,EACVC,OAAQ,IACRC,MAAO,S,oCAMb,OACE,6BACE,4BAAQO,UAAU,eAAeb,QAASd,KAAKwC,WAA/C,MAGA,4BAAQb,UAAU,gBAAgBb,QAASd,KAAKyC,aAAhD,S,+BAMI,IAAD,EACgCzC,KAAKJ,MAApC0C,EADD,EACCA,YAAaC,EADd,EACcA,cACfvB,EAAUsB,EAActC,KAAK2C,cAAgB,KAC7CC,EAAaL,EAAgBvC,KAAK6C,0BAA4B,KACpE,OACE,yBAAKlB,UAAU,2BACb,kBAAC,IAAD,CACEC,aAAc5B,KAAKC,uBACnBoB,OAAQ,CAAEC,cAAc,IAF1B,yrBAcE,6BACA,6BAfF,mEAkBA,6BACCN,EACD,6BACC4B,O,GAxFoBf,IAAMC,W,yBC6HpBgB,G,yDAzHb,WAAYnD,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACXmD,OAAQ,GACRC,UAAU,EACVC,UAAU,GAEZ,EAAKlD,SAPiB,E,4DASAmD,GAAmB,IAAD,EAChBA,EAAMC,OAAhBC,GAD0B,EAChCC,KADgC,EAC1BD,OACdpD,KAAKI,SAAS,CAAE2C,OAAQK,M,gCAERF,GAChBA,EAAMI,iBAD4B,IAI9BN,GAAW,EADO,MADHhD,KAAKJ,MAAhBmD,SAINC,GAAW,EACXhD,KAAKL,MAAMW,UAAYN,KAAKL,MAAMW,YAEpCN,KAAKI,SAAS,CAAE4C,e,4CAGhB,IAAMzC,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAe6C,EACf3C,iBAAkB,CAChBC,oBAAqB,mBAGzB,OACE,6BACE,kBAAC,IAAD,CACEE,wBAAwB,EACxBC,QAAST,EACTU,WAAW,EACXC,UAAU,EACVC,OAAQ,IACRC,MAAO,S,2CAMbW,M,+BAGA/B,KAAKwD,gBAAkBxD,KAAKwD,gBAAgBtD,KAAKF,MACjDA,KAAKyD,UAAYzD,KAAKyD,UAAUvD,KAAKF,MACrCA,KAAK0D,cAAgB1D,KAAK0D,cAAcxD,KAAKF,Q,iCAEd,IAAD,EACDA,KAAKJ,MAA1BmD,EADsB,EACtBA,OACFY,EAFwB,EACdX,SACchD,KAAK4D,sBAAwB,KAC3D,OACE,6BAEE,0BAAMjC,UAAU,cAAckC,SAAU7D,KAAKyD,WAC3C,2BACE,2BACEK,IAAI,KACJC,IAAI,IACJC,KAAK,SACLX,KAAK,SACLD,MAAOL,EACPkB,SAAUjE,KAAKwD,gBACf7B,UAAU,8BAGd,4BAAQA,UAAU,gBAAlB,WAEF,6BACCgC,K,sCAKL3D,KAAKI,SAAS,CAAE6C,UAAU,M,+BAElB,IAEFiB,EADelE,KAAKJ,MAAlBqD,SACsBjD,KAAKmE,WAAa,KAEhD,OACE,yBAAKxC,UAAU,iBACb,yDAGA,yBAAKA,UAAU,mBAAmByC,IAAKC,MACvC,kBAAC,IAAD,CACEzC,aAAc5B,KAAK0D,cACnBrC,OAAQ,CAAEC,cAAc,IAGxB,6TAOA,6BAEA,6BACA,6BACE,kBAAC,IAAOgD,UAAR,CAAkBC,MAAO,MACzB,+IAMJ,6BACCL,O,GArHWrC,IAAMC,Y,QCyDX0C,E,kDA7Db,WAAY7E,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACX6E,SAAS,GAEX,EAAK1E,SALiB,E,qDAStBC,KAAK0D,cAAgB1D,KAAK0D,cAAcxD,KAAKF,Q,sCAG7CA,KAAKI,SAAS,CAAEqE,SAAS,M,yCAGzB,IAAMlE,EAAiB,CACrBC,MAAM,EACNC,UAAU,EACVC,cAAegE,EACf9D,iBAAkB,CAChBC,oBAAqB,mBAGzB,OACE,6BACE,kBAAC,IAAD,CACEE,wBAAwB,EACxBC,QAAST,EACTU,WAAW,EACXC,UAAU,EACVC,OAAQ,IACRC,MAAO,S,+BAKL,IAEFuD,EADc3E,KAAKJ,MAAjB6E,QACczE,KAAK4E,mBAAqB,KAChD,OACE,yBAAKjD,UAAU,OACb,kBAAC,IAAD,CACEC,aAAc5B,KAAK0D,cACnBrC,OAAQ,CAAEC,cAAc,IAF1B,wlBAcA,6BACCqD,O,GAzDmB9C,IAAMC,WCiDnB+C,E,kDA7Cb,WAAYlF,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACXkF,oBAAoB,EACpBC,WAAW,EACXC,YAAY,GAEd,EAAKjF,SAPiB,E,iEAUtBgC,M,+BAGA/B,KAAKG,aAAeH,KAAKG,aAAaD,KAAKF,MAC3CA,KAAKiF,sBAAwBjF,KAAKiF,sBAAsB/E,KAAKF,MAC7DA,KAAKkF,aAAelF,KAAKkF,aAAahF,KAAKF,Q,qCAG3CA,KAAKI,SAAS,CAAE0E,oBAAoB,M,8CAGpC9E,KAAKI,SAAS,CAAE2E,WAAW,M,qCAG3B/E,KAAKI,SAAS,CAAE4E,YAAY,M,+BAEpB,IAAD,EAC+ChF,KAAKJ,MAAnDkF,EADD,EACCA,mBAAoBC,EADrB,EACqBA,UAAWC,EADhC,EACgCA,WACjCG,EAAiBL,EAAqB,kBAAC,EAAD,CAAgBxE,SAAUN,KAAKiF,wBAA4B,KACjGG,EAAQL,EAAY,kBAAC,EAAD,CAAOzE,SAAUN,KAAKkF,eAAmB,KAC7DG,EAAgBL,EAAa,kBAAC,EAAD,MAAoB,KACvD,OACE,yBAAKrD,UAAU,OACb,yBAAKA,UAAU,yBACb,6BACE,kBAAC,EAAD,CAAOrB,SAAUN,KAAKG,gBAExB,6BAAMgF,GACN,6BAAMC,GACN,6BAAMC,S,GAxCExD,IAAMC,WCDJwD,QACW,cAA7BtD,OAAOuD,SAASC,UAEe,UAA7BxD,OAAOuD,SAASC,UAEhBxD,OAAOuD,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF1D,SAAS2D,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,w3lJEjJ5BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.af2d213f.chunk.js","sourcesContent":["import React from \"react\";\nimport Typist from \"react-typist\";\nimport Lottie from \"react-lottie\";\nimport animationHeartbeat from \"../../assets/animations/heartbeat.json\";\nimport \"./intro.scss\";\ninterface IProps {\n  onFinish?: Function;\n}\ninterface IState {\n  showHeart: boolean;\n  showHelp: boolean;\n}\nclass Intro extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      showHeart: false,\n      showHelp: false,\n    };\n    this._setup();\n  }\n  private _setup(): void {\n    this._finishAnimationTyping = this._finishAnimationTyping.bind(this);\n    this._finishIntro = this._finishIntro.bind(this);\n  }\n  private _finishAnimationTyping(): void {\n    this.setState({ showHeart: true });\n    setTimeout(() => this.setState({ showHelp: true }), 500);\n  }\n  private _finishIntro(): void {\n    this.props.onFinish && this.props.onFinish();\n  }\n  private _getAnimation(): JSX.Element {\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: animationHeartbeat,\n      rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\",\n      },\n    };\n    return (\n      <div onClick={this._finishIntro}>\n        <Lottie\n          isClickToPauseDisabled={true}\n          options={defaultOptions}\n          isStopped={false}\n          isPaused={false}\n          height={200}\n          width={200}\n        />\n      </div>\n    );\n  }\n  private _getHelp(): JSX.Element {\n    return (\n      <Typist cursor={{ hideWhenDone: true }}>Presionar el corazoncito</Typist>\n    );\n  }\n  render() {\n    const { showHeart, showHelp } = this.state;\n    const animation = showHeart ? this._getAnimation() : null;\n    const help = showHelp ? this._getHelp() : null;\n    return (\n      <div className=\"app-intro app\">\n        <Typist\n          onTypingDone={this._finishAnimationTyping}\n          cursor={{ hideWhenDone: true }}\n        >\n          <h1>Hola Amorcito.</h1>\n          <br />\n          Espero te guste esta cartita\n        </Typist>\n        {animation}\n        {help}\n      </div>\n    );\n  }\n}\nexport default Intro;\n","export const goEndPage = () => {\n  setTimeout(() => {\n    window.scrollTo(0,document.body.scrollHeight);\n  }, 800);\n}","import React from \"react\";\nimport Typist from \"react-typist\";\nimport animationSad from \"../../assets/animations/sad.json\";\nimport Lottie from \"react-lottie\";\nimport { goEndPage } from \"../../core/helpers\";\ninterface IProps {\n  onFinish?: Function;\n}\ninterface IState {\n  showOptions: boolean;\n  showNoAcepted: boolean;\n}\nclass MessageInitial extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      showOptions: false,\n      showNoAcepted: false,\n    };\n    this._setup();\n  }\n  componentDidUpdate() {\n    goEndPage();\n  }\n  private _setup(): void {\n    this._finishAnimationTyping = this._finishAnimationTyping.bind(this);\n    this._accepted = this._accepted.bind(this);\n    this._noAccepted = this._noAccepted.bind(this);\n  }\n  private _finishAnimationTyping(): void {\n    this.setState({ showOptions: true });\n  }\n  private _accepted(): void {\n    this.setState({ showNoAcepted: false });\n    this.props.onFinish && this.props.onFinish();\n  }\n  private _noAccepted(): void {\n    this.setState({ showNoAcepted: true });\n  }\n  private _getAnimationNoAccepted(): JSX.Element {\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: animationSad,\n      rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\",\n      },\n    };\n    return (\n      <div>\n        <Lottie\n          isClickToPauseDisabled={true}\n          options={defaultOptions}\n          isStopped={false}\n          isPaused={false}\n          height={200}\n          width={200}\n        />\n      </div>\n    );\n  }\n  private _getOptions(): JSX.Element {\n    return (\n      <div>\n        <button className=\"btn btn-dark\" onClick={this._accepted}>\n          Si\n        </button>\n        <button className=\"btn btn-light\" onClick={this._noAccepted}>\n          No\n        </button>\n      </div>\n    );\n  }\n  render() {\n    const { showOptions, showNoAcepted } = this.state;\n    const options = showOptions ? this._getOptions() : null;\n    const noAccepted = showNoAcepted ? this._getAnimationNoAccepted() : null;\n    return (\n      <div className=\"app app-message-initial\">\n        <Typist\n          onTypingDone={this._finishAnimationTyping}\n          cursor={{ hideWhenDone: true }}\n        >\n          Amorcito hace mucho tiempo no te escribo ni te hago una carta como te\n          gusta. Hoy te escribo con palabras y código, porque sabes que no me gusta\n          usar papel para no romper arbolitos. Además, con esta acción apoyamos\n          con más comidita para los veganos XD. Quería empezar diciendo que en\n          esta cuarentena hemos solidificado mucho más la relación, ya que hemos\n          demostrado que somos un buen equipo. A su vez, me gustan nuestras\n          experiencias en la cocina y molestarte cuando todo se te quema y\n          celebrarte cuando te sale muy rico. Asimismo, me encanta verte sonreír\n          y reírte cuando te cuento un chiste o te das cuenta que desconozco\n          muchas cosas básicas del día a día.\n          <br />\n          <br />\n          ¿Quisieras resolver un miniproblemita y seguir con mi carta?\n        </Typist>\n        <br />\n        {options}\n        <br />\n        {noAccepted}\n      </div>\n    );\n  }\n}\nexport default MessageInitial;\n","import React from \"react\";\nimport Typist from \"react-typist\";\nimport Lottie from \"react-lottie\";\nimport animationHungry from \"../../assets/animations/hungry.json\";\nimport imageQuest from '../../assets/images/problema.jpg';\nimport './quest.scss';\nimport { goEndPage } from \"../../core/helpers\";\ninterface IProps {\n  onFinish?: Function;\n}\ninterface IState {\n  answer: string;\n  showForm: boolean;\n  hasError: boolean;\n}\nclass Quest extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      answer: \"\",\n      hasError: false,\n      showForm: false,\n    };\n    this._setup();\n  }\n  private _onChangeAnswer(event: any): void {\n    const { name, value } = event.target;\n    this.setState({ answer: value });\n  }\n  private _onSubmit(event: any): void {\n    event.preventDefault();\n    const { answer } = this.state;\n    const answerCorrect = 15;\n    let hasError = true;\n    if (+answer === answerCorrect) {\n      hasError = false;\n      this.props.onFinish && this.props.onFinish();\n    }\n    this.setState({ hasError });\n  }\n  private _getAnimationHungry(): JSX.Element {\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: animationHungry,\n      rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\",\n      },\n    };\n    return (\n      <div>\n        <Lottie\n          isClickToPauseDisabled={true}\n          options={defaultOptions}\n          isStopped={false}\n          isPaused={false}\n          height={200}\n          width={200}\n        />\n      </div>\n    );\n  }\n  componentDidUpdate() {\n    goEndPage();\n  }\n  private _setup(): void {\n    this._onChangeAnswer = this._onChangeAnswer.bind(this);\n    this._onSubmit = this._onSubmit.bind(this);\n    this._finishTyping = this._finishTyping.bind(this);\n  }\n  private _getForm(): JSX.Element {\n    const { answer, hasError } = this.state;\n    const erroAnswer = hasError ? this._getAnimationHungry() : null;\n    return (\n      <div>\n        \n        <form className=\"text-center\" onSubmit={this._onSubmit}>\n          <p>\n            <input\n              max=\"40\"\n              min=\"0\"\n              type=\"number\"\n              name=\"answer\"\n              value={answer}\n              onChange={this._onChangeAnswer}\n              className=\"form-control text-center\"\n            />\n          </p>\n          <button className=\"btn btn-dark\">Enviar</button>\n        </form>\n        <br />\n        {erroAnswer}\n      </div>\n    );\n  }\n  private _finishTyping(): void {\n    this.setState({ showForm: true });\n  }\n  render() {\n    const { showForm } = this.state;\n    const formAnswer = showForm ? this._getForm() : null;\n    //const erroAnswer = hasError ? this._getAnimationHungry() : null;\n    return (\n      <div className=\"app app-quest\">\n        <h2>\n          La pregunta es ..........\n        </h2>\n        <img className=\"app-quest__image\" src={imageQuest}/>\n        <Typist\n          onTypingDone={this._finishTyping}\n          cursor={{ hideWhenDone: true }}\n        >\n          \n          <div>\n            Cris y su gordito están en el aeropuerto camino a un viajecito de\n            amor. Ambos desean pesar la maleta de Cris y la mochila del gordito\n            Si se sabe que ambas pesan 40kg y que la maleta de Cris pesa 10\n            kilos más que la mochila del gordito. ¿Cuánto pesa la mochila del\n            gordito?\n          </div>\n          <br/>\n          \n          <br/>\n          <div>\n            <Typist.Backspace delay={200} />\n            <small>\n              PD: Cada vez que escribas una repuesta me enterare, ya que todo lo\n              guardo en mi base de datos muhaahaha...\n            </small>\n          </div>\n        </Typist>\n        <br />\n        {formAnswer}\n      </div>\n    );\n  }\n}\nexport default Quest;\n","import React from \"react\";\nimport Typist from \"react-typist\";\nimport animationDog from \"../../assets/animations/dog.json\";\nimport Lottie from \"react-lottie\";\ninterface IProps {\n  onFinish?: Function;\n}\ninterface IState {\n  showDog: boolean;\n}\nclass MessageFinish extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      showDog: false,\n    };\n    this._setup();\n  }\n\n  private _setup(): void {\n    this._finishTyping = this._finishTyping.bind(this);\n  }\n  private _finishTyping(): void {\n    this.setState({ showDog: true });\n  }\n  private _getAnimationDog(): JSX.Element {\n    const defaultOptions = {\n      loop: true,\n      autoplay: true,\n      animationData: animationDog,\n      rendererSettings: {\n        preserveAspectRatio: \"xMidYMid slice\",\n      },\n    };\n    return (\n      <div>\n        <Lottie\n          isClickToPauseDisabled={true}\n          options={defaultOptions}\n          isStopped={false}\n          isPaused={false}\n          height={200}\n          width={200}\n        />\n      </div>\n    );\n  }\n  render() {\n    const { showDog } = this.state;\n    const dog = showDog ? this._getAnimationDog() : null;\n    return (\n      <div className=\"app\">\n        <Typist\n          onTypingDone={this._finishTyping}\n          cursor={{ hideWhenDone: true }}\n        >\n          Por otro lado, me siento un poco triste porque no nos pudimos casar\n          hace unos meses. Algunas veces imagino que el señor Covencio entra a\n          nuestra boda y dice “yo me opongo”, argumentado y gritando “el novio\n          sigue gordo” XD. Sin embargo, esta cuarentena me gusta porque estamos\n          más juntos y conectados. Además, tenemos nuestro proyecto gamer y un\n          rompecabezas que algún día armaremos. Espero te guste este formato de\n          carta y que cuente como una manualidad XD. Agradezco a la vida seguir\n          siendo tu novio y que me sigas haciendo feliz te amo mucho mi hermosa\n          mujer.\n        </Typist>\n        <br/>\n        {dog}\n      </div>\n    );\n  }\n}\nexport default MessageFinish;\n","import React from \"react\";\nimport \"./App.scss\";\nimport Intro from \"./components/intro/intro\";\nimport MessageInitial from \"./components/message-initial/message-initial\";\nimport Quest from \"./components/quest/quest\";\nimport MessageFinish from \"./components/message-finish/message-finish\";\nimport { goEndPage } from \"./core/helpers\";\ninterface IProps {}\ninterface IState {\n  showMessageInitial: boolean;\n  showQuest: boolean;\n  showFinish: boolean;\n}\nclass App extends React.Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      showMessageInitial: false,\n      showQuest: false,\n      showFinish: false,\n    };\n    this._setup();\n  }\n  componentDidUpdate() {\n    goEndPage();\n  }\n  private _setup(): void {\n    this._finishIntro = this._finishIntro.bind(this);\n    this._finishMessageInitial = this._finishMessageInitial.bind(this);\n    this._finishQuest = this._finishQuest.bind(this);\n  }\n  private _finishIntro(): void {\n    this.setState({ showMessageInitial: true });\n  }\n  private _finishMessageInitial(): void {\n    this.setState({ showQuest: true });\n  }\n  private _finishQuest(): void {\n    this.setState({ showFinish: true });\n  }\n  render() {\n    const { showMessageInitial, showQuest, showFinish } = this.state;\n    const messageInitial = showMessageInitial ? <MessageInitial onFinish={this._finishMessageInitial} /> : null;\n    const quest = showQuest ? <Quest onFinish={this._finishQuest} /> : null;\n    const messageFinish = showFinish ? <MessageFinish /> : null;\n    return (\n      <div className=\"app\">\n        <div className=\"container text-center\">\n          <div>\n            <Intro onFinish={this._finishIntro}></Intro>\n          </div>\n          <div>{messageInitial}</div>\n          <div>{quest}</div>\n          <div>{messageFinish}</div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/problema.d094f509.jpg\";"],"sourceRoot":""}